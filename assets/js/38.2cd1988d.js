(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{369:function(s,t,a){"use strict";a.r(t);var n=a(8),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("前面，已经介绍了Mysql安装和建库，以及数据类型，在介绍建表之前，先来聊聊查询，而查询中最重要的不是写多少SQL，而是先搞清楚SQL查询的执行顺序，先搞清楚执行顺序，那写SQL才会有下笔如有神的感觉！")]),s._v(" "),t("p",[s._v("先来看看，一个完整的SQL查询：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" AGG_FUNC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_or_expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" another_table \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" mytable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" another_table"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" constraint_expression \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" constraint_expression \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OFFSET")]),s._v(" COUNT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("一个查询SQL的执行总是先从数据里按条件选出数据，然后对这些数据再次做一些整理处理，按要求返回成结果，让结果尽可能是简单直接的。")]),s._v(" "),t("p",[s._v("因为一个查询SQL由很多部分组成，所以搞清楚这些部分的执行顺序还挺重要的，这有助于我们更深刻的理解SQL执行过程。")]),s._v(" "),t("p",[s._v("查询执行顺序如下：")]),s._v(" "),t("p",[t("strong",[s._v("1. FROM 和 JOINs")])]),s._v(" "),t("p",[s._v("FROM 或 JOIN会第一个执行，确定一个整体的数据范围. 如果要JOIN不同表，可能会生成一个临时Table来用于 下面的过程。总之第一步可以简单理解为确定一个数据源表（含临时表) 。")]),s._v(" "),t("p",[t("strong",[s._v("2. WHERE")])]),s._v(" "),t("p",[s._v("我们确定了数据来源 WHERE 语句就将在这个数据源中按要求进行数据筛选，并丢弃不符合要求的数据行，所有的筛选col属性 只能来自FROM圈定的表. AS别名还不能在这个阶段使用，因为可能别名是一个还没执行的表达式 。")]),s._v(" "),t("p",[t("strong",[s._v("3. GROUP BY")])]),s._v(" "),t("p",[s._v("如果你用了 GROUP BY 分组，那GROUP BY 将对之前的数据进行分组，统计等，并将是结果集缩小为分组数.这意味着 其他的数据在分组后丢弃。")]),s._v(" "),t("p",[t("strong",[s._v("4. HAVING")])]),s._v(" "),t("p",[s._v("如果你用了 GROUP BY 分组, HAVING 会在分组完成后对结果集再次筛选。AS别名也不能在这个阶段使用。")]),s._v(" "),t("p",[t("strong",[s._v("5. SELECT")])]),s._v(" "),t("p",[s._v("确定结果之后，SELECT用来对结果col简单筛选或计算，决定输出什么数据。")]),s._v(" "),t("p",[t("strong",[s._v("6. DISTINCT")])]),s._v(" "),t("p",[s._v("如果数据行有重复DISTINCT 将负责排重。")]),s._v(" "),t("p",[t("strong",[s._v("7. ORDER BY")])]),s._v(" "),t("p",[s._v("在结果集确定的情况下，ORDER BY 对结果做排序。因为SELECT中的表达式已经执行完了。此时可以用AS别名。")]),s._v(" "),t("p",[t("strong",[s._v("8. LIMIT / OFFSET")])]),s._v(" "),t("p",[s._v("最后 LIMIT 和 OFFSET 从排序的结果中截取部分数据。")]),s._v(" "),t("p",[t("strong",[s._v("结论")])]),s._v(" "),t("p",[s._v("不是每一个SQL语句都要用到所有的句法，但灵活运用以上的句法组合和深刻理解SQL执行原理将能在SQL层面更好的解决数据问题，而不用把问题 都抛给程序逻辑。")])])}),[],!1,null,null,null);t.default=r.exports}}]);