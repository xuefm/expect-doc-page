(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{384:function(s,t,a){"use strict";a.r(t);var e=a(8),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"nginx反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx反向代理"}},[s._v("#")]),s._v(" nginx反向代理")]),s._v(" "),t("p",[s._v("nginx作为web服务器一个重要的功能就是反向代理。")]),s._v(" "),t("p",[s._v("nginx反向代理的指令不需要新增额外的模块，默认自带"),t("strong",[s._v("proxy_pass")]),s._v("指令，只需要修改配置文件就可以实现反向代理。")]),s._v(" "),t("h2",{attrs:{id:"_1-什么是反向代理服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是反向代理服务器"}},[s._v("#")]),s._v(" 1.什么是反向代理服务器")]),s._v(" "),t("p",[s._v("反向代理功能是nginx的三大主要功能之一（静态web服务器、反向代理、负载均衡）。nginx一般同时做为静态web服务器和反向代理服务器，做为web服务器访问静态文件图片、css、js、html等文件，做为反向代理服务器把请求发给后端业务处理服务，如果有多个后端处理节点，会配置负载均衡功能。")]),s._v(" "),t("p",[s._v("反向代理服务器是一种代理服务器，用于管理从外部网络到内部网络的连接或任何特定请求。它保护、路由和管理从外部网络到内部网络、Web服务器或专用网络的流量。")]),s._v(" "),t("p",[s._v("**外网客户机：**我们平时打开浏览器输入网址访问www.nginx.cn的场景中，我们的笔记本就可以理解为一个外网客户机。")]),s._v(" "),t("p",[s._v("**nginx反向代理服务：**浏览器输入网址并回车后，会发起一个http请求给nginx（反向代理服务器），这个请求如果是访问静态文件，那么nginx作为web服务器直接返回请求的内容，如果是访问的后台服务逻辑，那么nginx把请求转发给后端的服务处理。")]),s._v(" "),t("p",[s._v("**内网web服务：**后端的服务可以是很多种类型，LNMP环境下的php-fpm进程，Java环境下的tomcat、jetty等容器，通过程序逻辑处理http请求，生成html页面或者json串返回给客户端。对于小型应用，后端服务可以和nginx部署在同一台机器上。")]),s._v(" "),t("h2",{attrs:{id:"_2-反向代理服务器的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-反向代理服务器的好处"}},[s._v("#")]),s._v(" 2.反向代理服务器的好处")]),s._v(" "),t("p",[s._v("nginx反向代理重要的作用是配合"),t("strong",[s._v("upstream")]),s._v("实现负载均衡。")]),s._v(" "),t("p",[s._v("同时增加安全性，客户端不能直接访问后端服务，多了一个中间的屏障。")]),s._v(" "),t("p",[s._v("提升性能，通过异步非阻塞的方式把请求传给后端，提升了并发处理能力。")]),s._v(" "),t("p",[s._v("也可利用缓存、压缩响应提高响应速度。")]),s._v(" "),t("h2",{attrs:{id:"_3-nginx配置示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-nginx配置示例"}},[s._v("#")]),s._v(" 3.nginx配置示例")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend1.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend2.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend3.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" backend_server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"_4-proxy-pass和fastcgi-pass区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-proxy-pass和fastcgi-pass区别"}},[s._v("#")]),s._v(" 4.proxy_pass和fastcgi_pass区别")]),s._v(" "),t("p",[t("code",[s._v("proxy_pass")]),s._v(" 和 "),t("code",[s._v("fastcgi_pass")]),s._v(" 是 Nginx 中用于将请求转发到后端服务器的两种不同方式，分别用于 HTTP 反向代理和 FastCGI 代理。它们的区别主要在于后端服务器的类型和通信协议。")]),s._v(" "),t("h3",{attrs:{id:"_4-1-proxy-pass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-proxy-pass"}},[s._v("#")]),s._v(" 4.1 proxy_pass：")]),s._v(" "),t("ul",[t("li",[s._v("用于将 HTTP 或 HTTPS 请求转发给另一个服务器。")]),s._v(" "),t("li",[s._v("适用于反向代理 HTTP、HTTPS、WebSocket 等协议。")]),s._v(" "),t("li",[s._v("在配置中使用 "),t("code",[s._v("proxy_pass")]),s._v(" 指令，并指定后端服务器的地址。")]),s._v(" "),t("li",[s._v("在后端服务器使用任何 HTTP 服务器，如 Apache、Node.js、Tomcat 等。")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend_server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_4-2-fastcgi-pass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-fastcgi-pass"}},[s._v("#")]),s._v(" 4.2 fastcgi_pass：")]),s._v(" "),t("ul",[t("li",[s._v("用于将请求转发给 FastCGI 进程（如 PHP-FPM）来处理。")]),s._v(" "),t("li",[s._v("适用于处理动态内容，如 PHP 脚本、Python、Ruby 等。")]),s._v(" "),t("li",[s._v("在配置中使用 "),t("code",[s._v("fastcgi_pass")]),s._v(" 指令，并指定 FastCGI 进程的地址和端口。")]),s._v(" "),t("li",[s._v("在后端服务器需要运行 FastCGI 进程池，如 PHP-FPM。")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ \\.php$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_pass")]),s._v(" unix:/var/run/php/php7.4-fpm.sock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_param")]),s._v(" SCRIPT_FILENAME "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$document_root")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fastcgi_script_name")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" fastcgi_params")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("总的来说，"),t("code",[s._v("proxy_pass")]),s._v(" 用于反向代理 HTTP、HTTPS 请求到另一台服务器，而 "),t("code",[s._v("fastcgi_pass")]),s._v(" 用于将请求传递给 FastCGI 进程来处理动态内容。选择使用哪种方式取决于你的后端服务器的类型和所需的功能。")]),s._v(" "),t("h2",{attrs:{id:"_5-负载均衡策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-负载均衡策略"}},[s._v("#")]),s._v(" 5.负载均衡策略")]),s._v(" "),t("p",[s._v("Nginx反向代理负载均衡策略通常有以下几种，它们可以单独使用或者结合多种策略来实现更灵活的负载均衡：")]),s._v(" "),t("h3",{attrs:{id:"_5-1-轮询-round-robin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-轮询-round-robin"}},[s._v("#")]),s._v(" 5.1 轮询（Round Robin）")]),s._v(" "),t("p",[s._v("轮询（Round Robin）：默认的负载均衡策略，Nginx会按照定义的一组后端服务器列表轮流将请求分配到每个服务器上，每个请求依次分发到不同的服务器。")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend1.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend2.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend3.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_5-2-ip-hash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-ip-hash"}},[s._v("#")]),s._v(" 5.2 IP Hash")]),s._v(" "),t("p",[s._v("IP Hash：基于客户端IP地址的哈希值，将每个请求根据其来源IP地址哈希到同一个后端服务器上，这样可以保证相同IP的请求都发送到同一个后端服务器，适用于需要保持会话一致性的场景。")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ip_hash")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend1.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend2.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend3.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_5-3-最少连接数-least-connections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-最少连接数-least-connections"}},[s._v("#")]),s._v(" 5.3 最少连接数(Least Connections)")]),s._v(" "),t("p",[s._v("Least Connections：将请求发送到当前连接数最少的后端服务器上，这样可以实现动态的负载均衡，避免出现某一台服务器负载过重的情况。")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("least_conn")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend1.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend2.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend3.example.com")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"_5-4-权重-weighted-load-balancing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-权重-weighted-load-balancing"}},[s._v("#")]),s._v(" 5.4 权重(Weighted Load Balancing)")]),s._v(" "),t("p",[s._v("Weighted Load Balancing：可以为每个后端服务器配置权重，根据权重来决定向每个服务器发送的请求比例。")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" backend")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend1.example.com weight=3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend2.example.com weight=2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" backend3.example.com weight=1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" http://backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("这些负载均衡策略可以根据实际需求进行组合和调整，以满足不同场景下的性能和可用性要求。")])])}),[],!1,null,null,null);t.default=n.exports}}]);